{"version":3,"file":"static/js/947.ef88b5af.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactsListItem/ContactsListItem.styled.js","components/ContactsListItem/ContactsListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ContactsWrapper = styled.div`\n  margin-bottom: 20px;\n  width: 380px;\n`;\nexport const Title = styled.h1`\n  margin: 0;\n  font-size: 35px;\n  margin-bottom: 20px;\n`;\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  font-size: 25px;\n  font-weight: 600;\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\nexport const Input = styled.input`\n  margin-top: 5px;\n  font-size: 22px;\n  border: none;\n  padding: 5px;\n  border-radius: 6px;\n  background: #e0e0e0;\n  box-shadow: inset 5px 5px 13px #5a5a5a, inset -5px -5px 13px #ffffff;\n  &:focus,\n  &:hover {\n    outline: 1px solid aqua;\n  }\n`;\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  font-size: 20px;\n  padding: 5px;\n  border-radius: 6px;\n  background: linear-gradient(145deg, #cacaca, #f0f0f0);\n  box-shadow: 5px 5px 13px #5a5a5a, -5px -5px 13px #ffffff;\n  &:focus,\n  &:hover {\n    outline: 1px solid aqua;\n  }\n`;\n","import { useState } from 'react';\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { SpinnerCircularFixed } from 'spinners-react';\nimport {\n  ContactsWrapper,\n  Title,\n  Form,\n  Label,\n  Input,\n  Button,\n} from './ContactForm.styled';\nimport {\n  useGetContactsQuery,\n  useAddContactMutation,\n} from 'redux/contacts/contactsAPI';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [addContact, { isLoading }] = useAddContactMutation();\n  const { data: contacts } = useGetContactsQuery();\n\n  //=====================================\n  // useEffect(() => {\n  //   refetch();\n  // }, [refetch]);\n\n  const isContactlreadyExist = ({ name }) => {\n    return contacts.find(\n      contact => contact.name === name && contact.number === number\n    );\n  };\n\n  const contactFormHadler = data => {\n    if (isContactlreadyExist(data)) {\n      Notify.info(`Contact ${data.name} is already in Your Phonebook`);\n    } else {\n      console.log('data: ', data);\n      addContact(data);\n    }\n  };\n  //=====================================\n  const onContactFormInputChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n  const addContactToList = e => {\n    e.preventDefault();\n\n    contactFormHadler({ name, number });\n    formReset();\n  };\n  const formReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <ContactsWrapper>\n      <Title>Phonebook</Title>\n      <Form onSubmit={addContactToList}>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={onContactFormInputChange}\n          />\n        </Label>\n        <Label>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={onContactFormInputChange}\n          />\n        </Label>\n        <Button type=\"submit\">\n          {isLoading && (\n            <SpinnerCircularFixed size={20} style={{ paddingRight: 10 }} />\n          )}\n          Add contact\n        </Button>\n      </Form>\n    </ContactsWrapper>\n  );\n}\n","import styled from '@emotion/styled';\nexport const ContactsListWrapper = styled.div`\n  min-width: 420px;\n  background-color: #fff;\n  border-radius: 6px;\n  background: #e0e0e0;\n  box-shadow: 5px 5px 13px #5a5a5a, -5px -5px 13px #ffffff;\n  padding: 20px;\n  margin: 20px;\n  border-radius: 20px;\n`;\nexport const Title = styled.h2`\n  margin: 0;\n  font-size: 35px;\n\n  margin-bottom: 20px;\n`;\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column-reverse;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n","import styled from '@emotion/styled';\nexport const Item = styled.li`\n  font-size: 20px;\n  padding: 5px;\n  &:not(:last-child) {\n    margin-top: 10px;\n  }\n`;\nexport const ItemContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const ItemContainerSpan = styled.span`\n  margin-left: 10px;\n  font-weight: 800;\n`;\nexport const Button = styled.button`\n  border: none;\n  font-size: 15px;\n  padding: 5px;\n  margin-left: 20px;\n  border-radius: 6px;\n  background: linear-gradient(145deg, #cacaca, #f0f0f0);\n  box-shadow: 5px 5px 13px #5a5a5a, -5px -5px 13px #ffffff;\n  &:focus,\n  &:hover {\n    outline: 1px solid aqua;\n  }\n`;\n","import React from 'react';\nimport { useDeleteContactMutation } from 'redux/contacts/contactsAPI';\nimport {\n  Button,\n  ItemContainer,\n  ItemContainerSpan,\n  Item,\n} from './ContactsListItem.styled';\nimport { SpinnerCircularFixed } from 'spinners-react';\n\nexport default function ContactsListItem({ contact }) {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  const deleteContacts = id => {\n    deleteContact(id);\n  };\n  return (\n    <>\n      {contact && (\n        <Item>\n          <ItemContainer>\n            {contact.name} :\n            <ItemContainerSpan>{contact.phone}</ItemContainerSpan>\n            <Button\n              disabled={isDeleting}\n              id={contact.id}\n              onClick={() => deleteContacts(contact.id)}\n              type=\"button\"\n            >\n              {isDeleting && (\n                <SpinnerCircularFixed size={12} style={{ paddingRight: 5 }} />\n              )}\n              Delete Contact\n            </Button>\n          </ItemContainer>\n        </Item>\n      )}\n    </>\n  );\n}\n","import { ContactsListWrapper, List, Title } from './ContactList.styled';\nimport { useGetContactsQuery } from 'redux/contacts/contactsAPI';\nimport { FaRegSadCry } from 'react-icons/fa';\nimport { useSelector } from 'react-redux';\nimport ContactsListItem from '../ContactsListItem/ContactsListItem';\nimport { useEffect } from 'react';\n\nexport default function ContactList() {\n  const { data: contacts, isFetching, refetch } = useGetContactsQuery();\n  console.log('contacts: ', contacts);\n  const filter = useSelector(state => state.filter);\n  useEffect(() => {\n    refetch();\n  }, [refetch]);\n  const getFilteredContacts = () => {\n    if (contacts !== undefined) {\n      return contacts.filter(contact => {\n        return contact.name.toLowerCase().includes(filter.filter);\n      });\n    }\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <ContactsListWrapper>\n      <Title>Contacts</Title>\n      {filteredContacts && filteredContacts.length > 0 && (\n        <List>\n          {filteredContacts.map(value => {\n            return <ContactsListItem key={value.id} contact={value} />;\n          })}\n        </List>\n      )}\n      {isFetching && !filteredContacts && (\n        <>\n          <h3>Contact list is not ready...</h3>\n        </>\n      )}\n      {filteredContacts && filteredContacts.length === 0 && (\n        <>\n          <h3>\n            Contact list is empty <FaRegSadCry />\n          </h3>\n        </>\n      )}\n    </ContactsListWrapper>\n  );\n}\n","import styled from '@emotion/styled';\nexport const Form = styled.form`\n  display: flex;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  font-size: 25px;\n  font-weight: 600;\n`;\nexport const Input = styled.input`\n  margin-top: 5px;\n  font-size: 22px;\n  border: none;\n  padding: 5px;\n  border-radius: 6px;\n  background: #e0e0e0;\n  box-shadow: inset 5px 5px 13px #5a5a5a, inset -5px -5px 13px #ffffff;\n  &:focus,\n  &:hover {\n    outline: 1px solid aqua;\n  }\n`;\nexport const ClearButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  border: none;\n  font-size: 15px;\n  font-size: 25px;\n  padding: 5px;\n  margin-left: 20px;\n  border-radius: 6px;\n  background: linear-gradient(145deg, #cacaca, #f0f0f0);\n  box-shadow: 5px 5px 13px #5a5a5a, -5px -5px 13px #ffffff;\n  &:focus,\n  &:hover {\n    outline: 1px solid aqua;\n  }\n`;\n","import { Form, Label, Input, ClearButton } from './Filter.styled';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts, clearFilter } from 'redux/filter/filterSlice';\n\nexport default function Filter() {\n  const filter = useSelector(state => state.filter);\n\n  const dispatch = useDispatch();\n  const handleClearFilter = () => {\n    dispatch(clearFilter());\n  };\n  const handleFilter = e => {\n    dispatch(filterContacts(e.currentTarget.value));\n  };\n  return (\n    <div>\n      <Form>\n        <Label>\n          Find contact by name\n          <Input\n            type=\"text\"\n            name=\"filter\"\n            value={filter.filter ? filter.filter : ''}\n            onChange={handleFilter}\n          />\n        </Label>\n        <ClearButton onClick={handleClearFilter} type=\"button\">\n          <FaTrashAlt />\n        </ClearButton>\n      </Form>\n    </div>\n  );\n}\n","import styled from '@emotion/styled';\nexport const AppWrapper = styled.section`\n  min-height: 100%;\n  width: 100%;\n\n  display: flex;\n  align-items: baseline;\n  justify-content: center;\n`;\nexport const Wrapper = styled.div`\n  border-radius: 6px;\n  background: #e0e0e0;\n  box-shadow: 5px 5px 13px #5a5a5a, -5px -5px 13px #ffffff;\n  padding: 20px;\n  margin: 20px;\n  border-radius: 20px;\n`;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { AppWrapper, Wrapper } from './Contacts.styled';\n\nexport default function Contacts() {\n  return (\n    <AppWrapper>\n      <Wrapper>\n        <ContactForm />\n        <Filter />\n      </Wrapper>\n      <ContactList />\n    </AppWrapper>\n  );\n}\n"],"names":["ContactsWrapper","styled","Title","Form","Label","Input","Button","ContactForm","useState","name","setName","number","setNumber","useAddContactMutation","addContact","isLoading","contacts","useGetContactsQuery","data","contactFormHadler","find","contact","isContactlreadyExist","console","log","Notify","onContactFormInputChange","e","currentTarget","value","formReset","onSubmit","preventDefault","type","pattern","title","required","onChange","SpinnerCircularFixed","size","style","paddingRight","ContactsListWrapper","List","Item","ItemContainer","ItemContainerSpan","ContactsListItem","useDeleteContactMutation","deleteContact","isDeleting","phone","disabled","id","onClick","ContactList","isFetching","refetch","filter","useSelector","state","useEffect","filteredContacts","undefined","toLowerCase","includes","getFilteredContacts","length","map","ClearButton","Filter","dispatch","useDispatch","filterContacts","clearFilter","AppWrapper","Wrapper","Contacts"],"sourceRoot":""}